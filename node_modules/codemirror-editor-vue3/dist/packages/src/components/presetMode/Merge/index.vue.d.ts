import type { Editor, EditorConfiguration } from "codemirror";
import type { PropType } from "vue";
declare const _sfc_main: import("vue").DefineComponent<{
    options: {
        type: PropType<EditorConfiguration>;
        default: () => {};
    };
    cminstance: {
        type: PropType<Editor | null>;
        default: () => {};
    };
}, {
    mergeView: globalThis.Ref<HTMLElement | undefined>;
    initialize: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("ready" | "update:cminstance")[], "ready" | "update:cminstance", import("vue").PublicProps, Readonly<globalThis.ExtractPropTypes<{
    options: {
        type: PropType<EditorConfiguration>;
        default: () => {};
    };
    cminstance: {
        type: PropType<Editor | null>;
        default: () => {};
    };
}>> & {
    onReady?: ((...args: any[]) => any) | undefined;
    "onUpdate:cminstance"?: ((...args: any[]) => any) | undefined;
}, {
    options: EditorConfiguration;
    cminstance: Editor | null;
}, {}>;
export default _sfc_main;
