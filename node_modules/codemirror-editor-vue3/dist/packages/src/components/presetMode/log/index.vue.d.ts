import type { PropType } from "vue";
import type { Editor } from "codemirror";
declare const _sfc_main: import("vue").DefineComponent<{
    value: {
        type: PropType<string>;
        default: string;
    };
    name: {
        type: PropType<string>;
        default: string;
    };
    options: {
        type: ObjectConstructor;
        default: () => {};
    };
    cminstance: {
        type: PropType<Editor | null>;
        default: () => {};
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
}, {
    initialize: () => void;
    textarea: globalThis.Ref<any>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("ready" | "update:cminstance")[], "ready" | "update:cminstance", import("vue").PublicProps, Readonly<globalThis.ExtractPropTypes<{
    value: {
        type: PropType<string>;
        default: string;
    };
    name: {
        type: PropType<string>;
        default: string;
    };
    options: {
        type: ObjectConstructor;
        default: () => {};
    };
    cminstance: {
        type: PropType<Editor | null>;
        default: () => {};
    };
    placeholder: {
        type: StringConstructor;
        default: string;
    };
}>> & {
    onReady?: ((...args: any[]) => any) | undefined;
    "onUpdate:cminstance"?: ((...args: any[]) => any) | undefined;
}, {
    value: string;
    options: Record<string, any>;
    placeholder: string;
    name: string;
    cminstance: Editor | null;
}, {}>;
export default _sfc_main;
